// <auto-generated />
using GPIHTask.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GPIHTask.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GPIHTask.Domain.Entities.ApplicationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ApplicationUsers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FullName = "Vakhtang Peradze",
                            PasswordHash = "AQAAAAEAACcQAAAAEF4xAEXSPyGw3xPCIDFZUfiKhniJ2dyz+ORCoH+4tguZ4k1MZ0CRixdBDKcDulix1Q==",
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("GPIHTask.Domain.Entities.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "",
                            LogoPath = "../assets/images/apple.png",
                            Title = "Apple"
                        },
                        new
                        {
                            Id = 2,
                            Description = "",
                            LogoPath = "../assets/images/Microsoft.png",
                            Title = "Microsoft"
                        },
                        new
                        {
                            Id = 3,
                            Description = "",
                            LogoPath = "../assets/images/Google.png",
                            Title = "Google"
                        },
                        new
                        {
                            Id = 4,
                            Description = "",
                            LogoPath = "../assets/images/GPIH.png",
                            Title = "GPIH"
                        },
                        new
                        {
                            Id = 5,
                            Description = "",
                            LogoPath = "../assets/images/Ford.png",
                            Title = "Ford"
                        });
                });

            modelBuilder.Entity("GPIHTask.Domain.Entities.CompanyOnMarketPrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("MarketId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("MarketId");

                    b.ToTable("CompanyOnMarketPrices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyId = 1,
                            MarketId = 1,
                            Price = 0.0m
                        },
                        new
                        {
                            Id = 2,
                            CompanyId = 2,
                            MarketId = 1,
                            Price = 0.0m
                        },
                        new
                        {
                            Id = 3,
                            CompanyId = 3,
                            MarketId = 1,
                            Price = 0.0m
                        },
                        new
                        {
                            Id = 4,
                            CompanyId = 4,
                            MarketId = 1,
                            Price = 0.0m
                        },
                        new
                        {
                            Id = 5,
                            CompanyId = 5,
                            MarketId = 1,
                            Price = 0.0m
                        },
                        new
                        {
                            Id = 6,
                            CompanyId = 1,
                            MarketId = 2,
                            Price = 0.0m
                        },
                        new
                        {
                            Id = 7,
                            CompanyId = 2,
                            MarketId = 2,
                            Price = 0.0m
                        },
                        new
                        {
                            Id = 8,
                            CompanyId = 3,
                            MarketId = 2,
                            Price = 0.0m
                        },
                        new
                        {
                            Id = 9,
                            CompanyId = 4,
                            MarketId = 2,
                            Price = 0.0m
                        },
                        new
                        {
                            Id = 10,
                            CompanyId = 5,
                            MarketId = 2,
                            Price = 0.0m
                        },
                        new
                        {
                            Id = 11,
                            CompanyId = 1,
                            MarketId = 3,
                            Price = 0.0m
                        },
                        new
                        {
                            Id = 12,
                            CompanyId = 2,
                            MarketId = 3,
                            Price = 0.0m
                        },
                        new
                        {
                            Id = 13,
                            CompanyId = 3,
                            MarketId = 3,
                            Price = 0.0m
                        },
                        new
                        {
                            Id = 14,
                            CompanyId = 4,
                            MarketId = 3,
                            Price = 0.0m
                        },
                        new
                        {
                            Id = 15,
                            CompanyId = 5,
                            MarketId = 3,
                            Price = 0.0m
                        });
                });

            modelBuilder.Entity("GPIHTask.Domain.Entities.Market", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Markets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "",
                            Title = "Market 1"
                        },
                        new
                        {
                            Id = 2,
                            Description = "",
                            Title = "Market 2"
                        },
                        new
                        {
                            Id = 3,
                            Description = "",
                            Title = "Market 3"
                        });
                });

            modelBuilder.Entity("GPIHTask.Domain.Entities.CompanyOnMarketPrice", b =>
                {
                    b.HasOne("GPIHTask.Domain.Entities.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GPIHTask.Domain.Entities.Market", "Market")
                        .WithMany()
                        .HasForeignKey("MarketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Market");
                });
#pragma warning restore 612, 618
        }
    }
}
